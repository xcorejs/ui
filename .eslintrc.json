{
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "plugin:react/recommended",
        "standard"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module",
        "project": "tsconfig.eslint.json"
    },
    "plugins": [
        "react",
        "@typescript-eslint"
    ],
    "settings": {
      "react": {
        "version": "detect"
      }
    },
    "rules": {
      "react/prop-types": "off",
      "no-unused-vars": "off",
      "react/no-unescaped-entities": "off",
      "no-shadow": "error",
      "max-len": ["error", { "code": 120, "tabWidth": 2, "ignoreTemplateLiterals": true, "ignoreComments": true }],
      "react/jsx-first-prop-new-line": ["error", "multiline"],
      "no-undef": "off",
      "no-console": ["error", { "allow": ["warn", "error"] }],
      "no-extra-parens": "off",
      "@typescript-eslint/no-extra-parens": ["warn", "all", { "ignoreJSX": "multi-line" }],
      "semi": "off",
      "@typescript-eslint/semi": ["warn", "always", { "omitLastInOneLineBlock": true }],
      "@typescript-eslint/member-delimiter-style": "warn",
      "react/jsx-fragments": "warn",
      "@typescript-eslint/await-thenable": "error",
      "brace-style": "off",
      "@typescript-eslint/brace-style": ["error"],
      "camelcase": "off",
      "@typescript-eslint/camelcase": ["warn"],
      "comma-spacing": "off",
      "@typescript-eslint/comma-spacing": ["warn"],
      "func-call-spacing": "off",
      "@typescript-eslint/func-call-spacing": ["warn"],
      "indent": "off",
      "@typescript-eslint/indent": ["warn", 2, {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "MemberExpression": 1,
        "FunctionDeclaration": { "parameters": 1, "body": 1 },
        "FunctionExpression": { "parameters": 1, "body": 1 },
        "CallExpression": { "arguments": 1 },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "ignoredNodes": ["TemplateLiteral *"]
      }],
      "@typescript-eslint/no-extra-non-null-assertion": "warn",
      "no-extra-semi": "off",
      "@typescript-eslint/no-extra-semi": ["warn"],
      "@typescript-eslint/no-implied-eval": "error",
      "@typescript-eslint/no-misused-promises": "error",
      "@typescript-eslint/no-throw-literal": "error",
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
      "@typescript-eslint/no-unnecessary-condition": ["off", { "ignoreRhs": true }],
      "@typescript-eslint/no-unnecessary-type-arguments": "warn",
      "@typescript-eslint/no-unnecessary-type-assertion": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "quotes": "off",
      "@typescript-eslint/quotes": ["warn", "single", { "avoidEscape": true, "allowTemplateLiterals": false }],
      "@typescript-eslint/restrict-template-expressions": ["error", { "allowNumber": true, "allowBoolean": true }],
      "@typescript-eslint/type-annotation-spacing": "warn",
      "react/jsx-max-props-per-line": ["error", { "maximum": 1, "when": "multiline" }],
      "react/jsx-tag-spacing": ["warn"],
      "react/jsx-closing-bracket-location": ["warn", "tag-aligned"],
      "react/jsx-wrap-multilines": ["warn", {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "ignore"
      }],
      "react/jsx-boolean-value": ["warn", "never"],
      "react/jsx-closing-tag-location": "warn",
      "react/jsx-curly-brace-presence": ["warn", { "props": "never", "children": "never" }],
      "react/jsx-curly-newline": ["warn", { "multiline": "forbid", "singleline": "forbid" }],
      "react/jsx-curly-spacing": ["warn", "never"],
      "react/jsx-equals-spacing": "warn",
      "react/jsx-indent-props": ["warn", 2],
      "react/jsx-indent": ["warn", 2],
      "react/jsx-props-no-multi-spaces": "warn",
      "react/no-danger-with-children": "error",
      "react/no-deprecated": "error",
      "react/no-direct-mutation-state": "error",
      "react/display-name": "off"
    }
}
